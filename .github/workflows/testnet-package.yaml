name: Build and Push Image​
on:​
  push:​
    branches: ['dev']​
jobs:​
  build-and-push-image:​
    runs-on: inscription-web-runner​
    permissions:​
      contents: read​
    outputs:​
      short_sha: ${{ steps.vars.outputs.short_sha }}​
    steps:​
      - name: Checkout​
        uses: actions/checkout@v4​
      - name: Set short git commit SHA​
        id: vars​
        run: |​
          calculatedSha=$(git rev-parse --short ${{ github.sha }})​
          echo "short_sha=$calculatedSha" >> "$GITHUB_OUTPUT"​
      - name: Create image tag​
        id: meta​
        uses: docker/metadata-action@v5​
        with:​
          images: ${{ secrets.REPOSITORY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/inscription-web # change this to your project frontend name​
          tags: |​
            type=sha​
      - name: Set up Docker Buildx​
        uses: docker/setup-buildx-action@v3​
      - name: Build and push​
        uses: docker/build-push-action@v5​
        env:​
        with:​
          context: .​
          push: true​
          platforms: linux/amd64​
          tags: ${{ steps.meta.outputs.tags }}​
          labels: ${{ steps.meta.outputs.labels }}​
          cache-from: type=gha​
          cache-to: type=gha,mode=max​
          build-args: |​
            NEXT_PUBLIC_APP_ENV=test
  dispatch:​
    runs-on: inscription-runner​
    needs: build-and-push-image​
    steps:​
      - name: Deploy​
        uses: actions/github-script@v6​
        with:​
          github-token: ${{ secrets.TOK }}​
          script: |​
            await github.rest.actions.createWorkflowDispatch({​
              owner: 'inscriptionWebProject',​
              repo: 'devops',​
              workflow_id: 'deployment_testnet.yaml',​
              ref: 'main',​
              inputs: {​
                appName: 'inscription-web-server',​
                commit_sha: 'sha-${{ needs.build-and-push-image.outputs.short_sha }}',​
              }​
            })